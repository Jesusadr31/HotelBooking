package windows;

import client.Client;
import hashtable.StatusHashTable;
import hotelbookingproyect.Global;
import javax.swing.JOptionPane;
import list.List;
import list.NodeList;
import tree.Tree;

/**
 * Ventana de Check-Out para finalizar la estadía de un cliente.
 * Permite realizar el check-out de un cliente ingresando su nombre y apellido.
 * También muestra la información del cliente y permite confirmar el check-out.
 * Si el cliente tiene múltiples reservaciones, se solicita el número de habitación
 * específico para el check-out.
 * Si el cliente tiene una única reservación, se realiza el check-out de esa habitación directamente.
 * Si se realizan cambios en el sistema, como el check-out de un cliente, estos cambios
 * se reflejan en las estructuras de datos globales.
 * Se implementa la interfaz gráfica utilizando Java Swing.
 * 
 * @author Jesús
 */
public class CheckOut extends javax.swing.JFrame {
    List RoomsAvailable = Global.getAvalaibleRoomNum(); // Lista de habitaciones disponibles
    List Rooms = Global.getRooms(); // Lista de todas las habitaciones
    Tree roomNum = Global.getRoomNum(); // Árbol binario de búsqueda para gestionar el historial de habitaciones
    StatusHashTable table = Global.getStatus(); // Tabla de hash para gestionar el estado de las habitaciones
    List personEquals = new List(); // Lista de clientes con nombres y apellidos coincidentes
    
    /**
     * Constructor de la clase CheckOut.
     * Inicializa los componentes de la interfaz gráfica.
     */
    public CheckOut() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtNameClientCheckout = new javax.swing.JTextField();
        btnBackMain = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        btnCheckOut = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtareainfo = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Check-Out");
        setLocationByPlatform(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(0, 204, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Swis721 BlkEx BT", 0, 13)); // NOI18N
        jLabel1.setText("Check-out");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 340, 40));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 460, 40));

        jPanel2.setBackground(new java.awt.Color(0, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Swis721 BlkEx BT", 0, 11)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 102, 102));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("para finalizar su estadía.");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 440, 20));

        jLabel6.setFont(new java.awt.Font("Swis721 BlkEx BT", 0, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 102, 102));
        jLabel6.setText("Nombre del Cliente");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 120, 170, 30));

        txtNameClientCheckout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameClientCheckoutActionPerformed(evt);
            }
        });
        jPanel2.add(txtNameClientCheckout, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 180, 290, 30));

        btnBackMain.setBackground(new java.awt.Color(0, 153, 153));
        btnBackMain.setFont(new java.awt.Font("Swis721 BlkEx BT", 0, 12)); // NOI18N
        btnBackMain.setForeground(new java.awt.Color(255, 255, 255));
        btnBackMain.setText("Regresar al Menú");
        btnBackMain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackMainActionPerformed(evt);
            }
        });
        jPanel2.add(btnBackMain, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 310, 220, 40));

        btnSearch.setBackground(new java.awt.Color(0, 153, 153));
        btnSearch.setFont(new java.awt.Font("Swis721 BlkEx BT", 0, 12)); // NOI18N
        btnSearch.setForeground(new java.awt.Color(255, 255, 255));
        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });
        jPanel2.add(btnSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 250, 140, 30));

        jLabel4.setFont(new java.awt.Font("Swis721 BlkEx BT", 0, 11)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 102, 102));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Ingresa el nombre y apellido del cliente ");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 440, 20));

        btnCheckOut.setText("jButton1");
        btnCheckOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckOutActionPerformed(evt);
            }
        });
        jPanel2.add(btnCheckOut, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 250, -1, -1));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 460, 420));

        txtareainfo.setColumns(20);
        txtareainfo.setRows(5);
        jScrollPane1.setViewportView(txtareainfo);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 150, 270, 150));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    /**
    * Acción realizada al cambiar el texto en el campo de nombre del cliente para realizar el checkout.
    * @param evt Evento que desencadena la acción.
    */
    private void txtNameClientCheckoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameClientCheckoutActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameClientCheckoutActionPerformed

    
    /**
    * Acción realizada al presionar el botón "Regresar al Menú".
    * Regresa al menú principal de la aplicación.
    * @param evt Evento que desencadena la acción.
    */
    private void btnBackMainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackMainActionPerformed
        // Regresar al menú principal
        Menu vtna = new Menu();
        vtna.show();
        this.dispose();
    }//GEN-LAST:event_btnBackMainActionPerformed

    /**
    * Acción realizada al presionar el botón de búsqueda.
    * Busca al cliente por nombre y apellido y muestra su información si existe.
    * Si no se ingresa ningún nombre o apellido, muestra un mensaje de error.
    * @param evt Evento que desencadena la acción.
    */
    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        String name,lastname;
 
        try{
            if(txtNameClientCheckout.getText().equals("")){
                JOptionPane.showMessageDialog(null, "Porfavor instruzca un nombre y apellido");
            }
            String [] input = txtNameClientCheckout.getText().split(" ");
            name = input[0];
            lastname = input [1];
            txtareainfo.setText(table.searchClient(name, lastname).printClientStatus());
            personEquals = table.searchClient(name, lastname);
            
            
            JOptionPane.showMessageDialog(null, "Se ha realizado el Checkout de manera exitosa.\nEl cliente "+ name + " ha finalizado su estadía en el hotel."
            , "Estadía finalizada", JOptionPane.INFORMATION_MESSAGE);
            
        }catch(Exception e){
        JOptionPane.showMessageDialog(null, "Error, valor inválido");
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    /**
    * Acción realizada al presionar el botón de check-out.
    * Realiza el proceso de check-out para el cliente seleccionado.
    * Si el cliente tiene múltiples reservaciones, se solicita el número de habitación específico.
    * Se actualizan las estructuras de datos globales después del check-out.
    * Si ocurre algún error durante el proceso, se muestra un mensaje de error.
    * 
    * @param evt El evento de acción que desencadena esta acción.
    */
    private void btnCheckOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckOutActionPerformed
        String name,lastname,num;
        
        try{
            if(personEquals.getSize()> 1){
                String [] input = txtNameClientCheckout.getText().split(" ");
                name = input[0];
                lastname = input [1];
                num = input[2];
                NodeList currentNode = personEquals.getHead();
                int cont = 0;
                while(currentNode != null){
                    if(cont == Integer.parseInt(num)-1){
                        roomNum.searchClientsHistory(Integer.parseInt(num)).insertarFinal(currentNode.getClient());
                        table.CheckOut(currentNode.getClient().getName(), currentNode.getClient().getLastname(),num);
                    }
                    currentNode = currentNode.getNext();
                    cont++;
                }
                //roomNum.searchClientsHistory(Integer.parseInt(numRoom).insertarFinal(person.getHead().getClient());
            }else{
                table.CheckOut(personEquals.getHead().getClient().getName(), personEquals.getHead().getClient().getLastname(),personEquals.getHead().getClient().getRoomNum());
                roomNum.searchClientsHistory(Integer.parseInt(personEquals.getHead().getClient().getRoomNum())).insertarFinal(personEquals.getHead().getClient());
            }
            
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_btnCheckOutActionPerformed

    /**
     * Método principal para ejecutar la aplicación.
     * @param args Los argumentos de la línea de comandos.
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CheckOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CheckOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CheckOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CheckOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CheckOut().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBackMain;
    private javax.swing.JButton btnCheckOut;
    private javax.swing.JButton btnSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtNameClientCheckout;
    private javax.swing.JTextArea txtareainfo;
    // End of variables declaration//GEN-END:variables
}
